# -*- coding: utf-8 -*-
"""Sankey_diagram.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BN5wpjl6gTUggPKNOP_eyihYG2RuRKUa
"""

import pandas as pd
harbour_vessel = pd.read_excel('/content/final_filter.xlsx',sheet_name='Sheet1')
vessel_region = pd.read_excel('/content/final_filter.xlsx',sheet_name='Sheet2')

merged_df = pd.merge(
    harbour_vessel,
    vessel_region,
    on='region',
    how='inner'
)

import plotly.graph_objects as go

# 准备所有节点（自动去重）
all_nodes = (
    merged_df['harbour'].unique().tolist() +
    merged_df['vessel'].unique().tolist() +
    merged_df['region'].unique().tolist() +
    merged_df['species'].unique().tolist()
)

# 构建链接关系（四层结构）
links = []
for _, row in merged_df.iterrows():
    links.extend([
        {'source': row['harbour'], 'target': row['vessel'], 'type': 'harbour_vessel'},
        {'source': row['vessel'], 'target': row['region'], 'type': 'vessel_region'},
        {'source': row['region'], 'target': row['species'], 'type': 'region_species'}
    ])

# 聚合相同路径的流量
link_df = pd.DataFrame(links).groupby(['source', 'target', 'type']).size().reset_index(name='count')

# 节点索引映射
node_indices = {node: idx for idx, node in enumerate(all_nodes)}

# 生成桑基图数据
source = link_df['source'].map(node_indices)
target = link_df['target'].map(node_indices)
value = link_df['count']


# 绘制桑基图
fig = go.Figure(go.Sankey(
    node=dict(
        pad=25,
        thickness=30,
        line=dict(width=0),
        label=all_nodes,
        color=["#4E2A91" if n in merged_df['harbour'].unique() else  # 港口
               "skyblue" if n in merged_df['vessel'].unique() else   # 船只
               "#4BBF9A" if n in merged_df['region'].unique() else   # 区域
               "#A2D1E6" for n in all_nodes]                        # 物种
    ),
    link=dict(
        source=source,
        target=target,
        value=value
    )
))

fig.update_layout(
    title_text="Cargo Flow Conclusion for 178 Fishing Vessels (Harbour cities -> Vessels -> Regions -> Species)",
    font_size=10,
    height=3000,
    margin=dict(l=150, r=150)
)

fig.show()
fig.write_html("sankey_diagram.html")